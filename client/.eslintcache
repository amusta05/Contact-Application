[{"/Users/areebmustafa/Desktop/ContactApplication/client/src/index.js":"1","/Users/areebmustafa/Desktop/ContactApplication/client/src/App.js":"2","/Users/areebmustafa/Desktop/ContactApplication/client/src/components/layout/Navbar.js":"3","/Users/areebmustafa/Desktop/ContactApplication/client/src/components/pages/About.js":"4","/Users/areebmustafa/Desktop/ContactApplication/client/src/components/pages/Home.js":"5","/Users/areebmustafa/Desktop/ContactApplication/client/src/context/contact/ContactState.js":"6","/Users/areebmustafa/Desktop/ContactApplication/client/src/context/contact/contactReducer.js":"7","/Users/areebmustafa/Desktop/ContactApplication/client/src/context/contact/contactContext.js":"8","/Users/areebmustafa/Desktop/ContactApplication/client/src/context/types.js":"9","/Users/areebmustafa/Desktop/ContactApplication/client/src/components/contacts/Contacts.js":"10","/Users/areebmustafa/Desktop/ContactApplication/client/src/components/contacts/ContactItem.js":"11","/Users/areebmustafa/Desktop/ContactApplication/client/src/components/contacts/ContactForm.js":"12","/Users/areebmustafa/Desktop/ContactApplication/client/src/components/contacts/ContactFilter.js":"13"},{"size":412,"mtime":1611014806883,"results":"14","hashOfConfig":"15"},{"size":778,"mtime":1611105945512,"results":"16","hashOfConfig":"15"},{"size":727,"mtime":1611095455916,"results":"17","hashOfConfig":"15"},{"size":509,"mtime":1611095148010,"results":"18","hashOfConfig":"15"},{"size":456,"mtime":1611257910804,"results":"19","hashOfConfig":"15"},{"size":2758,"mtime":1611257158573,"results":"20","hashOfConfig":"15"},{"size":1543,"mtime":1611258989856,"results":"21","hashOfConfig":"15"},{"size":109,"mtime":1611101303370,"results":"22","hashOfConfig":"15"},{"size":539,"mtime":1611258965348,"results":"23","hashOfConfig":"15"},{"size":939,"mtime":1611264356627,"results":"24","hashOfConfig":"15"},{"size":1451,"mtime":1611190114892,"results":"25","hashOfConfig":"15"},{"size":2413,"mtime":1611256492321,"results":"26","hashOfConfig":"15"},{"size":771,"mtime":1611259578581,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"5ohvb5",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},"/Users/areebmustafa/Desktop/ContactApplication/client/src/index.js",[],["58","59"],"/Users/areebmustafa/Desktop/ContactApplication/client/src/App.js",[],"/Users/areebmustafa/Desktop/ContactApplication/client/src/components/layout/Navbar.js",[],"/Users/areebmustafa/Desktop/ContactApplication/client/src/components/pages/About.js",[],"/Users/areebmustafa/Desktop/ContactApplication/client/src/components/pages/Home.js",[],"/Users/areebmustafa/Desktop/ContactApplication/client/src/context/contact/ContactState.js",["60"],"import React,{useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\n\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACT,\n    CLEAR_FILTER,\n    FILTER_CONTACTS\n} from '../types'\n\nconst ContactState = props => {\n    // dummy  data\n    const initalState = {\n        contacts:[\n            {\n                id: 1,\n                name: 'Jill Johnson',\n                email: 'jill@gmail.com',\n                phone: '111-111-1111',\n                type:'personal'\n            },\n            {\n                id: 2,\n                name: 'Sara Watson',\n                email: 'sara@gmail.com',\n                phone: '222-222-2222',\n                type:'personal'\n            },\n            {\n                id: 3,\n                name: 'Harry White',\n                email: 'harry@gmail.com',\n                phone: '333-333-3333',\n                type:'professional'\n            }\n\n        ],\n        current: null,\n        filtered: null\n    };\n    const [state,dispatch] = useReducer(contactReducer, initalState);\n    // Actions that we will have\n\n    // Add Contact\n    const addContact = contact =>{\n        contact.id  = uuidv4();\n        dispatch({\n            type: ADD_CONTACT,\n            payload: contact\n        });\n    }\n    // Delete Contact\n    const deleteContact = id =>{\n        dispatch({\n            type: DELETE_CONTACT,\n            payload: id\n        });\n    }\n\n    // Set Current Contact\n    const setCurrent = contact =>{\n        dispatch({\n            type: SET_CURRENT,\n            payload: contact\n        });\n    }\n\n    // Clear Current Contact\n    const clearCurrent = () =>{\n        dispatch({\n            type: CLEAR_CURRENT\n        });\n    }\n\n    // Update Contact\n    const updateContact = contact =>{\n        dispatch({\n            type: UPDATE_CONTACT,\n            payload: contact\n        });\n    }\n\n    // Filter Contact\n    const filterContact = text =>{\n        dispatch({\n            type: FILTER_CONTACTS,\n            payload: text\n        });\n    }\n\n    // Clear Filter\n    const clearFilter = () =>{\n        dispatch({\n            type: CLEAR_FILTER\n        });\n    }\n    return (\n        <ContactContext.Provider value={{\n            contacts:state.contacts,\n            current: state.current,\n            filtered: state.filtered,\n            addContact,\n            deleteContact,\n            setCurrent,\n            clearCurrent,\n            updateContact,\n            clearFilter,\n            filterContact\n        }}>\n           {props.children}\n           \n        </ContactContext.Provider>\n\n    );\n}\nexport default ContactState;\n\n","/Users/areebmustafa/Desktop/ContactApplication/client/src/context/contact/contactReducer.js",["61","62"],"import {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER\n} from '../types'\n\nexport default (state,action) => {\n    switch (action.type) {\n        case ADD_CONTACT:\n            return {\n                ...state,\n                contacts: [...state.contacts , action.payload]\n            };\n\n        case DELETE_CONTACT:\n            return{\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            };\n        case SET_CURRENT:\n            return{\n                ...state,\n                current: action.payload\n            };\n        case CLEAR_CURRENT:\n            return{\n                ...state ,\n                current: null,\n            };\n        case UPDATE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n            };\n        case FILTER_CONTACTS:\n            return {\n                ...state,\n                filtered: state.contacts.filter(contact =>{\n                    const regex = new RegExp(`${action.payload}`,'gi');\n                    return contact.name.match(regex) || contact.email.match(regex);\n\n                })\n            };\n        case CLEAR_FILTER:\n                return{\n                    ...state ,\n                    filtered: null\n                };\n        default:\n            return state;\n    }\n}","/Users/areebmustafa/Desktop/ContactApplication/client/src/context/contact/contactContext.js",[],"/Users/areebmustafa/Desktop/ContactApplication/client/src/context/types.js",[],"/Users/areebmustafa/Desktop/ContactApplication/client/src/components/contacts/Contacts.js",["63","64","65"],"/Users/areebmustafa/Desktop/ContactApplication/client/src/components/contacts/ContactItem.js",[],"/Users/areebmustafa/Desktop/ContactApplication/client/src/components/contacts/ContactForm.js",[],"/Users/areebmustafa/Desktop/ContactApplication/client/src/components/contacts/ContactFilter.js",["66"],"import React, {useContext, useRef,useEffect} from 'react'\nimport ContactContext from '../../context/contact/contactContext';\nconst ContactFilter = () => {\n    const contactContext = useContext(ContactContext);\n    const text = useRef('');\n\n    useEffect(() =>{\n        if(contactContext.filtered == null){\n            text.current.value = '';\n        }\n    });\n    const onChange = e =>{\n        \n        if(text.current.value !== ''){\n            contactContext.filterContact(e.target.value);\n        }else{\n            contactContext.clearFilter();\n        }\n    }\n    return (\n        <form>\n            <input type=\"text\" ref={text} type=\"text\" placeholder=\"Filter Contacts...\" onChange={onChange} />\n            \n        </form>\n    )\n}\nexport default ContactFilter;",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":12,"column":5,"nodeType":"73","messageId":"74","endLine":12,"endColumn":19},{"ruleId":"71","severity":1,"message":"72","line":7,"column":5,"nodeType":"73","messageId":"74","endLine":7,"endColumn":19},{"ruleId":"75","severity":1,"message":"76","line":12,"column":1,"nodeType":"77","endLine":57,"endColumn":2},{"ruleId":"71","severity":1,"message":"78","line":4,"column":10,"nodeType":"73","messageId":"74","endLine":4,"endColumn":23},{"ruleId":"71","severity":1,"message":"79","line":4,"column":26,"nodeType":"73","messageId":"74","endLine":4,"endColumn":41},{"ruleId":"71","severity":1,"message":"80","line":8,"column":11,"nodeType":"73","messageId":"74","endLine":8,"endColumn":18},{"ruleId":"81","severity":1,"message":"82","line":22,"column":43,"nodeType":"83","endLine":22,"endColumn":54},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'FILTER_CONTACT' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'CSSTransition' is defined but never used.","'TransitionGroup' is defined but never used.","'nodeRef' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]